--- ocaml/bytecomp/translclass.ml	2009-07-07 14:40:55.000000000 -0700
+++ translclass.ml	2009-07-07 14:32:18.000000000 -0700
@@ -1,15 +1,3 @@
-(*
- * This file is part of ocamljs, OCaml to Javascript compiler
- * Copyright (C) 2007-9 Skydeck, Inc
- *
- * This program is free software released under the QPL.
- * See LICENSE for more details.
- *
- * The Software is provided AS IS with NO WARRANTY OF ANY KIND,
- * INCLUDING THE WARRANTY OF DESIGN, MERCHANTABILITY AND 
- * FITNESS FOR A PARTICULAR PURPOSE.
- *)
-
 (***********************************************************************)
 (*                                                                     *)
 (*                           Objective Caml                            *)
@@ -46,6 +34,14 @@
   |  _ ->
       Lfunction (Curried, params, body)
 
+let lfunction' params body =
+  (* the params = [] case is used only in the call to builtin_meths *)
+  match body with
+    Lfunction (Curried, params', body') ->
+      Lfunction (Curried, params @ params', body')
+  |  _ ->
+      Lfunction (Curried, params, body)
+
 let lapply func args =
   match func with
     Lapply(func', args') ->
@@ -641,11 +637,23 @@
           if not arr || !Clflags.debug then raise Not_found;
           builtin_meths [self] env env2 (lfunction args body')
         with Not_found ->
-          [lfunction (self :: args)
+          let this =
+            let desc = {
+              Primitive.prim_name = "$this";
+              prim_arity = 0;
+              prim_alloc = false;
+              prim_native_name = "";
+              prim_native_float = false;
+            } in
+            Lprim (Pccall desc, []) in
+          let body' =
+            let tbl = Ident.add self this Ident.empty in
+            subst_lambda tbl body' in
+          [lfunction' args
              (if not (IdentSet.mem env (free_variables body')) then body' else
               Llet(Alias, env,
                    Lprim(Parrayrefu Paddrarray,
-                         [Lvar self; Lvar env2]), body'))]
+                         [this; Lvar env2]), body'))]
         end
       | _ -> assert false
   in
